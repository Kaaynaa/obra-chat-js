version: '3.8'

services:
  # =====================================================
  # n8n - Workflow Automation
  # =====================================================
  n8n:
    image: n8nio/n8n:latest
    container_name: obra-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Basic Auth
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-changeme123}

      # Server Config
      - N8N_HOST=${N8N_HOST:-0.0.0.0}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
      - N8N_SECURE_COOKIE=false

      # Timezone
      - GENERIC_TIMEZONE=${TZ:-Europe/Paris}
      - TZ=${TZ:-Europe/Paris}

      # Twilio
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_WHATSAPP_NUMBER=${TWILIO_WHATSAPP_NUMBER}

      # AI APIs
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_HOST:-postgres}
      - DB_POSTGRESDB_PORT=${DB_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${DB_NAME:-n8n}
      - DB_POSTGRESDB_USER=${DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD:-n8n}

      # Slack (optional)
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}

      # Execution
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
      - EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true

      # Performance
      - N8N_PAYLOAD_SIZE_MAX=16
      - N8N_METRICS=true

    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres
    networks:
      - obra-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.votre-domaine.com`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"

  # =====================================================
  # PostgreSQL - Database
  # =====================================================
  postgres:
    image: postgres:15-alpine
    container_name: obra-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-n8n}
      - POSTGRES_USER=${DB_USER:-n8n}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-n8n}
      - POSTGRES_NON_DURABLE_SETTINGS=1
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - obra-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-n8n}']
      interval: 5s
      timeout: 5s
      retries: 10

  # =====================================================
  # Traefik - Reverse Proxy (HTTPS automatique)
  # =====================================================
  traefik:
    image: traefik:v2.10
    container_name: obra-traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${SUPPORT_EMAIL:-admin@example.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - obra-network

  # =====================================================
  # Redis - Cache & Queue (Optionnel)
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: obra-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - obra-network
    command: redis-server --appendonly yes

# =====================================================
# Volumes
# =====================================================
volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  traefik_letsencrypt:
    driver: local

# =====================================================
# Networks
# =====================================================
networks:
  obra-network:
    driver: bridge
